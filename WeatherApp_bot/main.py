from bs4 import BeautifulSoup as BS4
import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤—É –∫—Ä–∞—ó–Ω–∏ —Ç–∞ –º—ñ—Å—Ç–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É. –ü—Ä–∏–∫–ª–∞–¥: `Ukraine Kyiv`")

async def get_weather(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text.split()
    
    if len(user_input) < 2:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –∫—Ä–∞—ó–Ω–∏ —Ç–∞ –º—ñ—Å—Ç–∞. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: `Ukraine Kyiv`")
        return

    country = user_input[0]
    city = " ".join(user_input[1:])
    
    city_formatted = city.lower().replace(" ", "-")
    country_formatted = country.lower()
    url = f"https://www.timeanddate.com/weather/{country_formatted}/{city_formatted}"

    try:
        response = requests.get(url)
        response.raise_for_status()
        soup = BS4(response.text, 'html.parser')
        temperature = soup.find("div", class_="h2").get_text(strip=True)
        await update.message.reply_text(f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É {city.title()}, {country.title()}: {temperature}")
    except AttributeError:
        await update.message.reply_text("‚ùå –ú—ñ—Å—Ç–æ –∞–±–æ –∫—Ä–∞—ó–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—è.")
    except requests.exceptions.RequestException:
        await update.message.reply_text("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ —Å–∞–π—Ç—É –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö.")

def main():
    TOKEN = '8119550119:AAEVmSjBYVIN8gITMcSsPLyaVte6y-2Gq8w'
    
    app = ApplicationBuilder().token(TOKEN).build()
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, get_weather))
    
    app.run_polling()

if __name__ == '__main__':
    main()
